
/*
রেগুলার এক্সপ্রেশন 

ধরে নিলাম আমাদের একটা টেক্সট আছে আমরা এখান থেকে আমাদের প্রয়জোনীয় ডা টা লাগবে তাহলে যেটা করতে হবে তা হলো 
hello world Hello world hello world

ধরে নিলাম আমাদের হ্যালো
 দরকার সেক্ষেত্রে আমরা যা করত পারি তা হলো 

 / hello/  এইভাবে শুধু প্রথম হ্যালো টা আসবে যদি সব হ্যালো চাই তাহলে আময়াদের এইভাবে নিতে হবে 
 /hello/g 

 যদি ছোটো হাতের বড় হাতের সব চাই তাহলে আমাদের নিতে হবে এইভাবে 
 /hello/gi

 nOt operation jevabe used korbo amra 

 যেমন 
 color Color Coulour colour 
 আমরা নোট অপারেশন ঘটাতে পারি যেমন 
 /color | colour/
 তাহলেই আমাদের নোট এর আগে পরে দুইটাকেই পাচ্ছি  
 
 my favorite color is gray. HEX colorrr code is  #80808. 
i believe you are not "Color blind"!
if you are not color blind then tell my what is your favourite colorr?
or you like multiple colors? 
can we make the 'r' slient? Like colo! REGULAR EXPRESSION make me forget all spellings he he!
আমরা যদি কেরেক্টার সিলেক্ট করতে চাই তাহলে যেমন যে কোনো কেরেক্টার যেমন a b c d e f ......
তাহলে আমরা এইভাবে করতে পারি 
//w/
তাহলে যতো কেরেক্টার আছে সব পাবো আমরা 
যদি আমরা ডিজিট সিলেক্ট করতে চাই তাহলে আমরা এইভাবে সার্চ করতে পারি 
//d/
আমরা যদি স্পেস সিলেক্ট করতে চাই তাহলে আমরা এইভাবে করতে পারি 
//s/
যদি সব ধরনের ওয়ার্ড কেরেক্টার ছাড়া অন্য কিছু আমাদের দরকার হয় তাহলে আমরা এইভাবে ফাইন্ড আউট করতে পারি 
//w/
যদি নাম্বার বাদে আমরা সব কিছু সিলেক্ট করতে চাই তাহলে আমাদের যা করতে হবে তা হলো 
//D/
যদি আমরা ট্যাব সিলেক্ট করতে চাই তাহলে আমাদের এইটা ব্যাবহার করা লাগবে 
//t/
যে কোনো কেরেক্টার খুজতে আমরা ব্যাবহার করবো ডট কেরেক্টার তাহলে নাম্বার ডিজিট স্পেশাল ডিজিট সব সিলেক্ট হবে যেমন 
//./
যদি আমরা abc  নামক কিছু খুজতে চাই যেমন 
//[abc]/ প্রতি টা লাইন থেকে abc  সিলেক্ট করে নিয়ে আসবে যদি কেস সেন্সিটিভ চাই তাহলে ফ্লাগ ইউস করতে হবে যেমন //[abc]/ gi
 a থেকে  g  অথবা a থেকে z যদি আমাদের দরকার হয় তাহলে তো আমরা abc সব লিখবো না তাই আমরা আরেকভাবে বের করতে পারি যেমন 
 //[a-g] or [a-z]/ এইখানে যেহেতু আমরা gi ব্যাবহার করি নাই তাহলে আমাদের কাছে শুধু ছোটো হাতের জিনিষ অক্ষর আসবে 
যদি আমরা ইন্ডিভিডুয়াল ভাবে নিতে চাই তাহলে আমাদের এইভাবে করতে হবে 
/[a-gA-Gk=zK=Z]/ তাহলে আলাদা আলাদা ভাবে সেগুলি কে কন্সিডার করবে 
যদি আমরা চাই abc or abcdef বাদে সব কিছু সিলেক্ট করতে তাহলে এইভাবে দিতে হবে 
/[^abc]/ or [^abcdef] তাহলে abc or  abcdef  বাদে বাকি সব গুলি নিয়ে নিবে 
ধরে নিলাম এক লোক কালার বানান দুই ভাবে লিখেছে মাঝে মাঝে color আবার মাঝে মাঝে colour তাহলে অপশনাল বুঝাতে আমাদের প্রশ্নবোধোক ব্যাবহার করতে হবে 
যেমন 
/colou?r/gi কেস সেন্সিটিভ সহ দেখানো হয়েছে 
আবার আমরা কালার অনেক যায়গায় আর এক্সট্রা ব্যাবহার করেছি যদি সব গুলি ফাইন্ড করতে চাই তাহলে আমাদের স্টার ব্যাবহার করতে হবে যেমন 
/colou?rstar hobe /gi
যদি আমরা এক টা অক্ষর দুইবার চাই যেমন কালার এর পরে আর দুই বার বা দুই এর বেশি অণেক যায়গায় আছে সেক্ষেত্রে আমরা দুইবার যেভাবে নিতে পারি 
রেঞ্জ বলে দিতে হবে 
/color{2}/ আবার কালার এর মদ্ধে মিনিমাম মেক্সিমাম বলে দিতে  পারি যেমন 
/cikir{1.3}/ 1আমাদের বুঝাচ্ছে মিনিমাম এবং 3 আমাদের বুঝাচ্ছে মেক্সিমাম তিন 
যদি নাম্বার দিয়ে কোনো লাইন শুরু হয় তাহলে আমরা মেচিং করার জন্য করতে পারি 
43545 hello world how are you 
/^[0-9]/

ধরে নিলাম কোনো এক লাইনে word  দিয়ে শুরু হয়েছে তাহলে আমরা ফাইন্ড করার আগে যে সাইন দিবো তা হলো 
word is very important 
/^word/
যদি আমরা লাস্ট পজিশন মেচিং করাতে চাই তাহলে আমাদের করতে হবে 
hello programmer how are you ?
/?$/

*/


// জাভা স্ক্রিপ এর রেগুলার এক্সপ্রেশন নিয়ে কাজ করার ক্ষেত্রে মুলত চার টা ফাংশন আছে যেমন matches , index , replaced ,testing
let text = '#2A2A2A';
let regex = /#?([a-fA-F{2}])([a-fA-F{2}])([a-fA-F{2}])/g;

// matches regex এর সাথে যদি text ম্যাচ করে তাহলে তাহলে এরে আঁকারে সে সব সমস্ত ম্যাচ গুলি দিয়ে দেয় 
const matches = text.match(regex)
// search ঐ এরে এর ইনডেক্স টা দিয়ে দেয় 
const index = text.search(regex)
// replaced এর মাধ্যমে আমাদের রিজেক্স মেচ করলে আমরা সার্টেন কিছু একটা দিয়ে রিপ্লেস করে দিতে পারি 
const replaced = text.replace(regex,'000000')
//test যা করে রিজেক্স এর সাথে টেক্সট টা চেক করে ট্রু অর ফলস রিটার্ন করে 
const test  = regex.test(text)

console.log(matches,index,replaced,test)



let text = '+88-01907626245';
let regex = /(\+88)?-?01[0-9]\d{8}/g;

// matches regex এর সাথে যদি text ম্যাচ করে তাহলে তাহলে এরে আঁকারে সে সব সমস্ত ম্যাচ গুলি দিয়ে দেয় 
const matches = text.match(regex)
// search ঐ এরে এর ইনডেক্স টা দিয়ে দেয় 
const index = text.search(regex)
// replaced এর মাধ্যমে আমাদের রিজেক্স মেচ করলে আমরা সার্টেন কিছু একটা দিয়ে রিপ্লেস করে দিতে পারি 
const replaced = text.replace(regex,'phone')
//test যা করে রিজেক্স এর সাথে টেক্সট টা চেক করে ট্রু অর ফলস রিটার্ন করে 
const test  = regex.test(text)
console.log(matches,index,replaced,test)
